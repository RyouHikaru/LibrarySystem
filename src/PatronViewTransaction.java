import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleCallableStatement;
import oracle.jdbc.OracleTypes;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Ryou Hikaru
 */
public class PatronViewTransaction extends javax.swing.JDialog {
    private static CallableStatement cst;
    private static Connection con;
    private static String patronId;
    private Object[][] data;

    /**
     * Creates new form PatronViewTransaction
     * @param parent the parent frame
     * @param patronId the patron_no of the current logged on user
     * @param con the connection established by the user
     */
    public PatronViewTransaction(java.awt.Frame parent, String patronId, Connection con) {
        super(parent);
        
        this.patronId = patronId;
        this.con = con;
        initComponents();
        autoUpdateTransaction();
        setTableData();
        
        this.getContentPane().setBackground(new java.awt.Color(242,223,167));
        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transactions");
        setPreferredSize(new java.awt.Dimension(1230, 530));
        setResizable(false);

        returnButton.setText("Return");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Accession no.", "ISBN no.", "Book title", "Status", "Reserve date", "Reserve date due", "Borrowed date", "Due date", "Return date", "Penalty charge", "Fine status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(returnButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_returnButtonActionPerformed
    private void setTableData() {
        try {
            cst = con.prepareCall("{CALL retrieveTransactions(?,?)}");
            cst.setInt(1, Integer.parseInt(patronId));  // set IN parameter "p_patron_no"
            cst.registerOutParameter(2, OracleTypes.CURSOR);
            
            cst.execute();
            ResultSet rs = ((OracleCallableStatement)cst).getCursor(2);
            int i = 0;
            while (rs.next()) {
                i++;
            }
            
            data = new Object[i][columns().length];
            DefaultTableModel dModel = new DefaultTableModel(data, columns());
            table.setModel(dModel);
            
            cst.execute();
            ResultSet finalRs = ((OracleCallableStatement)cst).getCursor(2);
            i = 0;
            while (finalRs.next()) {
                dModel.setValueAt(finalRs.getString("accession_no"), i, 0);
                dModel.setValueAt(finalRs.getString("isbn_no"), i, 1);
                dModel.setValueAt(finalRs.getString("book_title"), i, 2);
                dModel.setValueAt(finalRs.getString("status"), i, 3);
                dModel.setValueAt(finalRs.getString("reservation_date"), i, 4);
                dModel.setValueAt(finalRs.getString("reservation_date_exp"), i, 5);
                dModel.setValueAt(finalRs.getString("date_borrowed"), i, 6);
                dModel.setValueAt(finalRs.getString("due_date"), i, 7);
                dModel.setValueAt(finalRs.getString("date_returned"), i, 8);
                dModel.setValueAt(finalRs.getString("penalty_charge"), i, 9);
                dModel.setValueAt(finalRs.getString("fine_status"), i, 10);
                i++;
            }
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    private void autoUpdateTransaction() {
        try {
            cst = con.prepareCall("{CALL autoupdatetransaction}");
            cst.execute();
            System.out.println("COMMIT");
        } catch (SQLException ex) {}
    }
    private Object[] columns() {
        Object[] ret = new String[] {
        "Accesssion no.",
        "ISBN no.:",
        "Book Title",
        "Status",
        "Reserve Date",
        "Reserve Date Due",
        "Borrowed Date",
        "Due Date",
        "Return Date",
        "Penalty Charge",
        "Fine Status"};
        return ret;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnButton;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
